# docker-compose.yml (Versión Final Definitiva con Logging Persistente)
services:
  nginx:
    build: ./nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/www/html:/var/www/html:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    networks:
      - app-net
    depends_on:
      - auth-service
      - restaurant-service
      - payment-service
      - pos-service
      - pac-service

  redis:
    image: redis:alpine
    restart: always
    networks:
      - app-net

  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-net
  
  auth-service:
    build: ./services/auth-service
    restart: on-failure
    env_file: [".env"]
    volumes: # <-- AÑADIDO PARA LOGS
      - ./logs/auth-service:/app/logs
    depends_on:
      - postgres
      - redis
    networks:
      - app-net

  restaurant-service:
    build: ./services/restaurant-service
    restart: on-failure
    env_file: [".env"]
    volumes: # <-- AÑADIDO PARA LOGS
      - ./logs/restaurant-service:/app/logs
    depends_on:
      - postgres
    networks:
      - app-net

  payment-service:
    build: ./services/payment-service
    restart: on-failure
    env_file: [".env"]
    volumes: # <-- AÑADIDO PARA LOGS
      - ./logs/payment-service:/app/logs
    depends_on:
      - postgres
    networks:
      - app-net

  pos-service:
    build: ./services/pos-service
    restart: on-failure
    env_file: [".env"]
    volumes: # <-- AÑADIDO PARA LOGS
      - ./logs/pos-service:/app/logs
    depends_on:
      - postgres
      - restaurant-service
    networks:
      - app-net
      
  pac-service:
    build: ./services/pac-service
    restart: on-failure
    env_file: [".env"]
    volumes: # <-- AÑADIDO PARA LOGS
      - ./logs/pac-service:/app/logs
    depends_on:
      - postgres
      - restaurant-service
    networks:
      - app-net
      
# --- Definición de la Red y el Volumen ---
volumes:
  postgres_data:

networks:
  app-net:
    driver: bridge