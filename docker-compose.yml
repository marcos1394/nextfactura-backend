# docker-compose.yml (Versión Final Definitiva con depends_on corregido)
services:
  nginx:
    build: ./nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/www/html:/var/www/html:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    networks:
      - app-net
    depends_on:
      # --- CORRECCIÓN CRUCIAL ---
      # Ahora Nginx esperará a que cada servicio esté 'healthy' antes de arrancar.
      auth-service:
        condition: service_healthy
      restaurant-service:
        condition: service_healthy
      payment-service:
        condition: service_healthy
      pos-service:
        condition: service_healthy
      pac-service:
        condition: service_healthy

  redis:
    image: redis:alpine
    restart: always
    networks:
      - app-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
  
  auth-service:
    build: ./services/auth-service
    restart: on-failure
    env_file: [".env"]
    depends_on:
      postgres: { condition: service_healthy }
      redis: { condition: service_healthy }
    networks:
      - app-net
    healthcheck:
      test: ["CMD-SHELL", "wget -q --spider http://127.0.0.1:${AUTH_SERVICE_PORT:-4001}/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # ... Y así para restaurant-service, payment-service, pos-service, y pac-service ...
  # (Las definiciones de los otros servicios se mantienen igual que en la versión anterior)
  # ...
  
volumes:
  postgres_data:

networks:
  app-net:
    driver: bridge