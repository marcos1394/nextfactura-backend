# docker-compose.yml (Versión Final con Red Explícita)
services:
  redis:
    image: redis:alpine
    restart: always
    networks:
      - app-net

  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-net
  
  auth-service:
    build: ./services/auth-service
    restart: on-failure
    env_file: [".env"]
    depends_on:
      - postgres
      - redis
    networks:
      - app-net
    command: /bin/sh -c "while ! nc -z postgres 5432; do echo 'Auth-Service waiting for DB...' && sleep 1; done; node server.js"

  restaurant-service:
    build: ./services/restaurant-service
    restart: on-failure
    env_file: [".env"]
    depends_on:
      - postgres
    networks:
      - app-net
    command: /bin/sh -c "while ! nc -z postgres 5432; do sleep 1; done; node server.js"

  payment-service:
    build: ./services/payment-service
    restart: on-failure
    env_file: [".env"]
    depends_on:
      - postgres
    networks:
      - app-net
    command: /bin/sh -c "while ! nc -z postgres 5432; do sleep 1; done; node server.js"

  pos-service:
    build: ./services/pos-service
    restart: on-failure
    env_file: [".env"]
    depends_on:
      - postgres
      - restaurant-service
    networks:
      - app-net
    command: /bin/sh -c "while ! nc -z postgres 5432; do sleep 1; done; node server.js"
      
  pac-service:
    build: ./services/pac-service
    restart: on-failure
    env_file: [".env"]
    depends_on:
      - postgres
      - restaurant-service
    networks:
      - app-net
    command: /bin/sh -c "while ! nc -z postgres 5432; do sleep 1; done; node server.js"
      
  api-gateway:
    build: ./api-gateway
    restart: always
    env_file: [".env"]
    ports:
      - "${API_GATEWAY_PORT:-8080}:8080"
    depends_on:
      - auth-service
      - restaurant-service
      - payment-service
      - pos-service
      - pac-service
    networks:
      - app-net

# --- Definición de la Red y el Volumen ---
volumes:
  postgres_data:

networks:
  app-net:
    driver: bridge